apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidBuildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.releaseVersionCode
        versionName rootProject.ext.releaseVersionName

        sourceSets.main.java.srcDirs = [
                "$rootProject.rootDir/../android/api",
                "$rootProject.rootDir/../android/src/java",
                "$rootProject.rootDir/../../rtc_base/java/src",
                "$rootProject.rootDir/webrtc/src/main/java",
        ]

        sourceSets.main.jniLibs.srcDirs = ['prebuilt_libs']
        ndk.abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
    compileOnly "com.android.support:support-annotations:${rootProject.ext.androidSupportSdkVersion}"
}

task sourcesJar(type: Jar) {
    if (project.getPlugins().hasPlugin('com.android.application') ||
            project.getPlugins().hasPlugin('com.android.library')) {
        from android.sourceSets.main.java.srcDirs
    }
    classifier = 'sources'
}
